server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    root /var/www/html/maccms;
    index index.php index.html index.htm;

    # Logging
    access_log /var/www/html/logs/nginx_access.log;
    error_log /var/www/html/logs/nginx_error.log;

    # This block handles requests for non-existent files and passes them to the main index.php
    # It's good for SEO-friendly frontend URLs.
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # This is the corrected, critical block for handling the backend routing
    location ~ [^/]\.php(/|$) {
        # This directive splits the request URI into the script and the path info
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        
        # If the path info part is empty, set it to a single slash
        if ($fastcgi_path_info = '') {
            set $fastcgi_path_info /;
        }

        # Check if the PHP script file actually exists on disk.
        # If it doesn't, return a 404. THIS IS THE KEY.
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        # Pass the request to PHP-FPM
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        
        # Include standard FastCGI parameters
        include fastcgi_params;
        
        # Override the SCRIPT_FILENAME to point to the actual script
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # Pass the captured path info to the PHP script
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }
}
